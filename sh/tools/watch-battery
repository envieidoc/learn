#!/bin/sh
#description: display a warning when the system is running out of energy
#             suspend the system if not action is taken
#usage: watch-battery

#it makes more sense to add it as a cron job
#cronjob (every 3 min)
#*/3 * * * * /path/to/this/script

PATH=/bin:/usr/bin:/sbin:/usr/sbin
#if ! pgrep upowerd >/dev/null; then
    #exit 1
#fi

_basename()
{
    [ -z "${1}" ] && return 1 || _basename_var_name="${1}"
    [ -z "${2}" ] || _basename_var_suffix="${2}"
    case "${_basename_var_name}" in
        /*|*/*) _basename_var_name="$(expr "${_basename_var_name}" : '.*/\([^/]*\)')" ;;
    esac

    if [ -n "${_basename_var_suffix}" ] && [ "${#_basename_var_name}" -gt "${#2}" ]; then
        if [ X"$(printf "%s" "${_basename_var_name}" | cut -c"$((${#_basename_var_name} - ${#_basename_var_suffix} + 1))"-"${#_basename_var_name}")" \
           = X"$(printf "%s" "${_basename_var_suffix}")" ]; then
            _basename_var_name="$(printf "%s" "${_basename_var_name}" | cut -c1-"$((${#_basename_var_name} - ${#_basename_var_suffix}))")"
        fi
    fi

    printf "%s\\n" "${_basename_var_name}"
}

_notify()
{
    [ -z "${1}" ] && return 1
    if [ X"${TERM}" = X"linux" ] || [ -z "${TERM}" ]; then
        kill -9 $(pgrep notify-osd) >/dev/null 2>&1
        if ! DISPLAY=:0 notify-send -t 1000 "${1}"  "${2}"; then
            if command -v "gxmessage" 2>/dev/null; then
                font="Monaco 9"
                gxmessage "${font:+-fn "$font"}" "${1} ${2}" "ok"
            else
                font="fixed"
                xmessage "${font:+-fn "$font"}" "${1} ${2}" "ok"
            fi
        fi
    else
        if [ -z "${2}" ]; then
            printf "%s\\n" "${1}"
        else
            printf "%s: %s\\n" "${1}" "${2}"
        fi
    fi
}

_get_minos_config()
{
    [ -z "${1}" ] && return 1
    [ -z "${_get_minos_config_var_home}" ] && _get_minos_config_var_home=$(awk '!/^#|^$/' "${HOME}"/.minos/config 2>&1)
    [ -z "${_get_minos_config_var_etc}" ]  && _get_minos_config_var_etc=$(awk '!/^#|^$/'  /etc/minos/config 2>&1)

    _get_minos_config_var_option="$(printf "%s" "${_get_minos_config_var_home}"|awk -v pattern="^${1} " '$0 ~ pattern {$1=""; print substr($0,2); exit}' 2>&1)"
    [ -z "${_get_minos_config_var_option}" ] && _get_minos_config_var_option="$(printf "%s" "${_get_minos_config_var_etc}"|awk -v pattern="^${1} " '$0 ~ pattern {$1=""; print substr($0,2); exit}' 2>&1)"
    [ -z "${_get_minos_config_var_option}" ] && printf "%s" "" || { eval _get_minos_config_var_option="${_get_minos_config_var_option}"; printf "%s" "${_get_minos_config_var_option}"; }
}

exec 9>/tmp/"$(_basename ${0})".lock
if ! flock -n 9 ; then
    _notify "$(_basename ${0}): another instance is running";
    exit 1
fi

if [ ! -f "$(command -v notify-send)" ] || [ ! -f "$(command -v pm-hibernate)" ] || [ ! -f "$(command -v acpi)" ]; then
    _notify  "[-] Error" "you need install acpi, notify-send and pm-utils to run this program"
    exit 1
fi

#=====VARS=====
#current battery status (Charging/Discharging/AC/Unknown)
stat="$(acpi -b | awk '{sub(",", ""); print $3}')"
#battery percentage
batt="$(acpi -b |awk '{if ($0 ~ "%,") sub("%,", ""); else sub("%", ""); print $4}')"
watch_battery_current="$(cat /tmp/"$(_basename ${0})" 2>/dev/null)"
action="$(_get_minos_config hibernate-bin)"
[ -z "${action}" ] && action="$(command -v pm-hibernate)"

# If Discharging...
if [ X"${stat}" = X"Discharging" ]; then
    # Battery under 5% -> force to hibernate
    if [ "${batt}" -lt "5" ]; then
        watch_battery_current="5"
        _notify "[-] Critical" "battery under 5%, the system will hibernate in 30 seconds, unless you plugin the computer"
        i=0 ; while [ "${i}" -lt "30" ]; do
            sleep 1
            stat="$(acpi -b | awk '{sub(",", ""); print $3}')"
            if [ X"${stat}" != X"Discharging" ]; then
                _notify  "[+] Charging" "charging now..."
                break
            fi
            i="$((${i} + 1))"
        done

        #check a last time if nobody has pluged in the machine, if not hibernate it
        stat="$(acpi -b | awk '{sub(",", ""); print $3}')"

        if [ X"${stat}" = X"Discharging" ]; then
            if [ -x "$(command -v mpc)" ]; then
                mpc stop
            fi
            sudo ${action}
        fi

    # Battery under 7% -> print an alert msg and don't repeat it again
    elif [ "${batt}" -lt "7" ] && [ "${batt}" -gt "4" ] && [ "${watch_battery_current}" != "7" ]; then
        watch_battery_current="7"
        _notify  "[-] Warning" "battery under 7%"
    # Battery under 10% -> print an alert msg and don't repeat it again
    elif [ "${batt}" -lt "10" ] && [ "${batt}" -gt "6" ] && [ "$watch_battery_current" != "10" ]; then
        watch_battery_current="10"
        _notify  "[-] Warning" "battery under 10%"
    # Battery under 15% -> print an alert msg and don't repeat it again
    elif [ "${batt}" -lt "15" ] && [ "${batt}" -gt "9" ] && [ "${watch_battery_current}" != "15" ]; then
        watch_battery_current="15"
        _notify  "[-] Warning" "battery under 15%"
    fi
fi

printf "%s\\n" "${watch_battery_current}" > /tmp/"$(_basename ${0})"

#!/bin/sh
#description: encrypt and password-protect execution of any script
#usage: crypt script

#example: crypt script
#creates script.crypt

if [ ! -t 0 ]; then
    #there is input comming from pipe or file, add to the end of $@
    set -- $(for arg in "${@}"; do printf "%s\\n" "${arg}"; done) $(cat)
fi

[ "${#}" -eq "0" ] && { printf "Usage: %s\\n" "$(expr "${0}" : '.*/\([^/]*\)') file ..." >&2; exit 1; }

if ! command -v "gpg" >/dev/null 2>&1; then
    printf "%s\\n" "You need to install gnupg: $ sudo apt-get install gnupg" >&2
    exit 1
fi

_crypt()
{
    for _crypt_var_file; do
        if [ -f "${_crypt_var_file}" ] ; then
            _crypt_var_file_output="${_crypt_var_file}".crypt
            _crypt_var_header='eval "$((dd if=${0} bs=1 skip=XX|gpg -d)2>/dev/null)"; exit;'
            _crypt_var_header_size="$(printf "%s\\n" "${_crypt_var_header}"|wc -c)"

            printf "%s\\n" "${_crypt_var_header}" | \
                sed s:XX:"${_crypt_var_header_size}": > "${_crypt_var_file_output}"
            gpg -c < "${_crypt_var_file}" >> "${_crypt_var_file_output}"
            chmod +x "${_crypt_var_file_output}"
        else
            printf "%s\\n" "'${_crypt_var_file}' doesn't exist"
        fi
    done
}

_crypt "${@}"

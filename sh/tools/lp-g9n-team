#!/bin/sh

_basename()
{
    [ -z "${1}" ] && return 1 || _basename_var_1="${1}"
    [ -z "${2}" ] || _basename_var_suffix="${2}"
    case "${_basename_var_1}" in
        /*|*/*) _basename_var_1="$(expr "${_basename_var_1}" : '.*/\([^/]*\)')" ;;
    esac

    if [ -n "${_basename_var_suffix}" ] && [ "${#_basename_var_1}" -gt "${#2}" ]; then
        if [ X"$(printf "%s" "${_basename_var_1}" | cut -c"$((${#_basename_var_1} - ${#_basename_var_suffix} + 1))")" \
           = X"$(printf "%s" "${_basename_var_suffix}" | cut -c1)" ]; then
            while [ "${#_basename_var_suffix}" -gt "0" ]; do
                if [ X"$(printf "%s" "${_basename_var_1}" | cut -c"${#_basename_var_1}")" \
                   = X"$(printf "%s" "${_basename_var_suffix}" | cut -c"${#_basename_var_suffix}")" ]; then
                    _basename_var_1="$(printf "%s" "${_basename_var_1}" | cut -c1-"$((${#_basename_var_1} - 1))")"
                    _basename_var_suffix_len="$((${#_basename_var_suffix} - 1))"
                    if [ "${_basename_var_suffix_len}" -gt "0" ]; then
                        _basename_var_suffix="$(printf "%s" "${_basename_var_suffix}" | cut -c1-"${_basename_var_suffix_len}")"
                    else
                        _basename_var_suffix=""
                    fi
                fi
            done
        fi
    fi

    printf "%s\\n" "${_basename_var_1}"
}

_usage()
{
    printf "%s\\n" "Usage: $(_basename ${0}) [lp-group]"
    printf "%s\\n" "       lp-group   launchpad group to query, ubuntumembers by default"
    exit 0
}

_whereis()
{
    [ -z "${1}" ] && return 1
    [ -n "${2}" ] && return 1
    if ! command -v "${1}" 2>/dev/null; then
        return 1
    fi
}

_die()
{   #print a stacktrace with a msg, exits with 1
    printf "%s\\n" "${*}"
    exit
}

_internetavailable()
{   #check for internet connection, returns 0 on success, 1 otherwise
    wget --tries=3 --timeout=5 http://www.google.com -O /tmp/index.google > /dev/null 2>&1

    if [ -s /tmp/index.google ]; then
        rm /tmp/index.google
        return 0
    else
        rm /tmp/index.google
        return 1
    fi
}

_deps()
{
    _whereis python >/dev/null || _die "$(_basename ${0}): python not found!, $ sudo apt-get install python"
    _whereis wget   >/dev/null || _die "$(_basename ${0}): wget not found!, $ sudo apt-get install wget"

    if ! _internetavailable; then
        _die "$(_basename ${0}): You must have an internet connection to run this script"
        exit 1
    fi

    if ! $(printf "%s" "from launchpadlib.launchpad import Launchpad" | python >/dev/null 2>/dev/null); then
        _die "$(_basename ${0}): launchpadlib not found!, $ sudo apt-get install python-launchpadlib"
    fi

    if ! $(printf "%s" "from geopy import geocoders" | python >/dev/null 2>/dev/null ); then
        _die "$(_basename ${0}): geopy not found!, $ sudo apt-get install python-pip && sudo pip install geopy"
    fi
}

[ -n "${1}" ] && team="${1}" || team="ubuntumembers"

_deps

[ -f lp-g9n.py ] || wget https://raw.github.com/chilicuil/learn/master/python/lp-g9n -O lp-g9n.py >/dev/null 2>/dev/null
[ -f lp-g9n.py ] && printf "%s\\n" "Outputing data to \"lp-g9n-team.csv\"" || _die "lp-g9n-team: failed to connect to launchpad, verify your connection"
python lp-g9n.py "${team}" | tee lp-g9n-team.csv

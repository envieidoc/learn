#!/bin/sh
#description: translate string
#usage: translate [OPTION] string

#example: translate -en-es "hello world"
#hola mundo

#example: translate -es "hola mundo"
#hello world

#example: translate "hola mundo"
#hello world

_usage()
{
    printf "%s\\n" "Usage: $(expr "${0}" : '.*/\([^/]*\)') [-sl-tl] phrase" >&2
    printf "%s\\n" "       sl     source language (auto by default)" >&2
    printf "%s\\n" "       tl     target language (english by default)" >&2
    exit 1
}

_translate()
{
    [ -z "${1}" ] && return 1
    #update 14-12-2012 05:06: thanks to johnraff #http://crunchbang.org/forums/viewtopic.php?id=17034
    phrase="${*}"
    page="$(curl -s -i --user-agent "" -d "sl=${sl}" -d "tl=${tl}" -d "client=t"  \
                 -d "ie=UTF-8" -d "oe=UTF-8" --data-urlencode "text=${phrase}" http://translate.google.com/translate_a/t)"
            #"text=${phrase}" http://translate.google.com)"
    #printf "%s\\n" "${page}"
    #encoding="$(printf "%s\\n" "${page}" | \
        #awk '/Content-Type: .* charset=/ {sub(/^.*charset=["'\'']?/,""); sub(/[ "'\''].*$/,""); print}')"
    #result="$(printf "%s\\n" "${page}" | iconv -f "${encoding}" | awk 'BEGIN {RS="</div>"};/<span[^>]* id=["'\'']?result_box["'\'']?/' | html2text -utf8)"
    result="$(printf "%s\\n" "${page}" | tail -1 | cut -d\" -f2)"

    if command -v "xclip" >/dev/null 2>&1; then
        printf "%s" "${result}" | xclip -selection clipboard; xclip -o -selection clipboard; printf "\\n"
    else
        printf "%s\\n" "${result}"
    fi
}

if [ ! -t 0 ]; then
    #there is input comming from pipe or file, add to the end of $@
    set -- $(for arg in "${@}"; do printf "%s\\n" "${arg}"; done) $(cat)
fi

[ "${#}" -eq "0" ] && _usage

case "${1}" in
    -*) sl="$(printf "%s" "${1}" | cut -d'-' -f2)"
        tl="$(printf "%s" "${1}" | cut -d'-' -f3)"
        if [ -z "${sl}" ] && [ -z "${tl}" ]; then
            #maybe return an error message is better
            sl="auto"; tl="en";
        elif [ -n "${sl}" ] && [ -z "${tl}" ]; then
            tl="en";
        fi
        shift ;;
    *)  sl="auto"; tl="en"; ;;
esac

_translate "${@}"

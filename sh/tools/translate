#!/usr/bin/env sh
#description: translate string
#usage: translate [OPTION] string

#example: translate -s "hola mundo"
#hello world

phrase="$@"
#printf "%s\\n" "$PHRASE"

_usage()
{
    printf "%s\\n" "Usage: `expr "$0" : '.*/\([^/]*\)'` [-s|-e] phrase"
    printf "\\n"
    printf "%s\\n" "          -s     Spanish-English (default)"
    printf "%s\\n" "          -o     Spanish-Portuguese"
    printf "%s\\n" "          -e     English-Spanish"
    printf "%s\\n" "          -p     Portugese-Spanish"
    exit 1
}

[ -z "$phrase" ] && _usage

while getopts ":s:o:e:p:" option; do
    case $option in
        s)
          lng1="es";
          lng2="en";
          phrase=$OPTARG
          ;;
        o)
          lng1="es";
          lng2="pt";
          phrase=$OPTARG
          ;;
        e)
          lng1="en";
          lng2="es";
          phrase=$OPTARG
          ;;
        p)
          lng1="pt";
          lng2="es";
          phrase=$OPTARG
          ;;
        :)
          printf "%s\\n" "Option -$OPTARG requires an argument"
          _usage
          ;;
        \?)
          printf "%s\\n" "Invalid option: -$OPTARG"
          _usage
          ;;
    esac
done

if [ -z "$lng1" ]; then
    lng1="es";
    lng2="en";
fi

[ -n "$1" ] && shift
[ -n "$2" ] && shift

#update 14-12-2012 05:06: thanks to johnraff > http://crunchbang.org/forums/viewtopic.php?id=17034
page=$(curl -s -i --user-agent "" -d "sl=$lng1" -d "tl=$lng2" --data-urlencode "text=${phrase}" http://translate.google.com)
encoding=$(printf "%s\\n" "$page" | awk '/Content-Type: .* charset=/ {sub(/^.*charset=["'\'']?/,""); sub(/[ "'\''].*$/,""); print}')
result=$(printf "%s\\n" "$page" | iconv -f "$encoding" |  awk 'BEGIN {RS="</div>"};/<span[^>]* id=["'\'']?result_box["'\'']?/' | html2text -utf8)
printf "%s\\n" "$result"
#printf "%s\\n" "$page" | iconv -f $encoding |  awk 'BEGIN {RS="</div>"};/<span[^>]* id=["'\'']?result_box["'\'']?/' | printf "\\n"

#!/bin/sh
#description: compress files
#usage: compress file[s] file.format

#example: compress files/ files.tar.gz
#files/file1
#files/file2
#...

_basename()
{
    [ -z "${1}" ] && return 1 || _basename_var_1="${1}"
    [ -z "${2}" ] || _basename_var_suffix="${2}"
    case "${_basename_var_1}" in
        /*|*/*) _basename_var_1="$(expr "${_basename_var_1}" : '.*/\([^/]*\)')" ;;
    esac

    if [ -n "${_basename_var_suffix}" ] && [ "${#_basename_var_1}" -gt "${#2}" ]; then
        if [ X"$(printf "%s" "${_basename_var_1}" | cut -c"$((${#_basename_var_1} - ${#_basename_var_suffix} + 1))")" \
           = X"$(printf "%s" "${_basename_var_suffix}" | cut -c1)" ]; then
            while [ "${#_basename_var_suffix}" -gt "0" ]; do
                if [ X"$(printf "%s" "${_basename_var_1}" | cut -c"${#_basename_var_1}")" \
                   = X"$(printf "%s" "${_basename_var_suffix}" | cut -c"${#_basename_var_suffix}")" ]; then
                    _basename_var_1="$(printf "%s" "${_basename_var_1}" | cut -c1-"$((${#_basename_var_1} - 1))")"
                    _basename_var_suffix_len="$((${#_basename_var_suffix} - 1))"
                    if [ "${_basename_var_suffix_len}" -gt "0" ]; then
                        _basename_var_suffix="$(printf "%s" "${_basename_var_suffix}" | cut -c1-"${_basename_var_suffix_len}")"
                    else
                        _basename_var_suffix=""
                    fi
                fi
            done
        fi
    fi

    printf "%s\\n" "${_basename_var_1}"
}

_usage()
{
    printf "%s\\n" "Usage: $(_basename ${0}) [-s] FILES ... FILE.[tar.gz,tar.bz2,zip...]" >&2
    printf "%s\\n" "           -s       quiet mode" >&2
    exit 1
}

_compress()
{
    i=0
    for COMPRESS_FILE; do :; done
    for FILE; do
        i="$((${i} + 1))"
        [ "${#}" -eq "${i}" ] && continue
        [ ! -r "${FILE}" ] && { printf "%s\\n" "$(_basename ${0}): ${FILE} does not exist or is not readable" >&2; exit 1; }
        FILES="${FILE}""|""${FILES}"
    done

    FILES_FORMAT="$(printf "%s" "${FILES}" | sed 's:|: :g')"
    OLDIFS="${IFS}"
    IFS="|"

    if [ -z "${SFLAG}" ]; then
        case "${COMPRESS_FILE}" in
            #TODO 15-02-2014 01:02 >> add _exec function which prints and executes current command
            *.deb|*.udeb)
                printf "%s " "[+] ar rv ${COMPRESS_FILE} ${FILES_FORMAT}"
                printf "\\n"
                ar rv "${COMPRESS_FILE}" ${FILES}
                ;;
            *.tar.bz2|*.tbz|*.tbz2)
                printf "%s " "[+] tar cvf - ${FILES_FORMAT} | bzip2 > ${COMPRESS_FILE}"
                printf "\\n"
                tar cvf - ${FILES} | bzip2 > "${COMPRESS_FILE}"
                ;;
            *.tar.gz|*.tgz)
                printf "%s " "[+] tar cvf - ${FILES_FORMAT} | gzip > ${COMPRESS_FILE}"
                printf "\\n"
                tar cvf - ${FILES} | gzip > "${COMPRESS_FILE}"
                ;;
            *.bz2)
                x="0"
                for FILE in ${FILES}; do
                    x="$((${x} + 1))"
                done
                [ "${x}" -gt "1" ] && { printf "%s\\n" \
                    "$(_basename ${0}): bz2 files can only be compressed one by one, use tar.bz2 if you require to compress several files at the same time" >&2; exit 1; }
                true
                printf "%s " "[+] bzip2 -cv ${FILES_FORMAT} | dd of=${COMPRESS_FILE}"
                printf "\\n"
                bzip2 -cv ${FILES} | dd of="${COMPRESS_FILE}"
                ;;
            *.rar)
                printf "%s " "[+] rar a ${COMPRESS_FILE} ${FILES_FORMAT}"
                printf "\\n"
                rar a "${COMPRESS_FILE}" ${FILES}
                ;;
            *.gz)
                x="0"
                for FILE in ${FILES}; do
                    x="$((${x} + 1))"
                done
                [ "${x}" -gt "1" ] && { printf "%s\\n" \
                    "$(_basename ${0}): gz files can only be compressed one by one, use tar.gz if you require to compress several files at the same time" >&2; exit 1; }
                true
                printf "%s " "[+] gzip -cv ${FILES_FORMAT} | dd of=${COMPRESS_FILE}"
                printf "\\n"
                gzip -cv ${FILES} | dd of="${COMPRESS_FILE}"
                ;;
            *.tar)
                printf "%s " "[+] tar cvf ${COMPRESS_FILE} ${FILES_FORMAT}"
                printf "\\n"
                tar cvf "${COMPRESS_FILE}" ${FILES}
                ;;
            *.zip|*.xpi)
                printf "%s " "[+] zip -r ${COMPRESS_FILE} ${FILES_FORMAT}"
                printf "\\n"
                zip -r "${COMPRESS_FILE}" ${FILES}
                ;;
            *.7z)
                printf "%s " "[+] 7z a ${COMPRESS_FILE} ${FILES_FORMAT}"
                printf "\\n"
                7z a "${COMPRESS_FILE}" ${FILES}
                ;;
            *.tar.lzma)
                printf "%s " "[+] tar cvf - ${FILES_FORMAT} | lzma > ${COMPRESS_FILE}"
                printf "\\n"
                tar cvf - ${FILES} | lzma > "${COMPRESS_FILE}"
                ;;
            *.tar.xz)
                printf "%s " "[+] tar cvf - ${FILES_FORMAT} | xz > ${COMPRESS_FILE}"
                printf "\\n"
                tar cvf - ${FILES} | xz > "${COMPRESS_FILE}"
                ;;
            *.jar)
                printf "%s " "[+] jar cvf ${COMPRESS_FILE} ${FILES_FORMAT}"
                printf "\\n"
                jar cvf "${COMPRESS_FILE}" ${FILES}
                ;;
            *.iso)
                printf "%s " "[+] 7z a ${COMPRESS_FILE} ${FILES_FORMAT}"
                printf "\\n"
                7z a "${COMPRESS_FILE}" ${FILES}
                ;;
            *)
                printf "%s\\n" "'${COMPRESS_FILE}' is not a valid compressed file"
                ;;
        esac
    else
        case "${COMPRESS_FILE}" in
            *.deb|*.udeb)
                printf "%s " "[+] ar r ${COMPRESS_FILE} ${FILES_FORMAT}"
                printf "\\n"
                ar r "${COMPRESS_FILE}" ${FILES}
                ;;
            *.tar.bz2|*.tbz|*.tbz2)
                printf "%s " "[+] tar cf - ${FILES_FORMAT} | bzip2 > ${COMPRESS_FILE}"
                printf "\\n"
                tar cf - ${FILES} | bzip2 > "${COMPRESS_FILE}"
                ;;
            *.tar.gz|*.tgz)
                printf "%s " "[+] tar cf - ${FILES_FORMAT} | gzip > ${COMPRESS_FILE}"
                printf "\\n"
                tar cf - ${FILES} | gzip > "${COMPRESS_FILE}"
                ;;
            *.bz2)
                x="0"
                for FILE in ${FILES}; do
                    x="$((${x} + 1))"
                done
                [ "${x}" -gt "1" ] && { printf "%s\\n" \
                    "$(_basename ${0}): bz2 files can only be compressed one by one, use tar.bz2 if you require to compress several files at the same time" >&2; exit 1; }
                true
                printf "%s " "[+] bzip2 -c ${FILES_FORMAT} | dd of=${COMPRESS_FILE}"
                printf "\\n"
                bzip2 -c ${FILES} | dd of="${COMPRESS_FILE}"
                ;;
            *.rar)
                printf "%s " "[+] rar a ${COMPRESS_FILE} ${FILES_FORMAT}"
                printf "\\n"
                rar a "${COMPRESS_FILE}" ${FILES}
                ;;
            *.gz)
                x="0"
                for FILE in ${FILES}; do
                    x="$((${x} + 1))"
                done
                [ "${x}" -gt "1" ] && { printf "%s\\n" \
                    "$(_basename ${0}): gz files can only be compressed one by one, use tar.gz if you require to compress several files at the same time" >&2; exit 1; }
                true
                printf "%s " "[+] gzip -c ${FILES_FORMAT} | dd of=${COMPRESS_FILE}"
                printf "\\n"
                gzip -c ${FILES} | dd of="${COMPRESS_FILE}"
                ;;
            *.tar)
                printf "%s " "[+] tar cf ${COMPRESS_FILE} ${FILES_FORMAT}"
                printf "\\n"
                tar cf "${COMPRESS_FILE}" ${FILES}
                ;;
            *.zip|*.xpi)
                printf "%s " "[+] zip -r ${COMPRESS_FILE} ${FILES_FORMAT}"
                printf "\\n"
                zip -r "${COMPRESS_FILE}" ${FILES}
                ;;
            *.7z)
                printf "%s " "[+] 7z a ${COMPRESS_FILE} ${FILES_FORMAT}"
                printf "\\n"
                7z a "${COMPRESS_FILE}" ${FILES}
                ;;
            *.tar.lzma)
                printf "%s " "[+] tar cf - ${FILES_FORMAT} | lzma > ${COMPRESS_FILE}"
                printf "\\n"
                tar cf - ${FILES} | lzma > "${COMPRESS_FILE}"
                ;;
            *.tar.xz)
                printf "%s " "[+] tar cf - ${FILES_FORMAT} | xz > ${COMPRESS_FILE}"
                printf "\\n"
                tar cf - ${FILES} | xz > "${COMPRESS_FILE}"
                ;;
            *.jar)
                printf "%s " "[+] jar cf ${COMPRESS_FILE} ${FILES_FORMAT}"
                printf "\\n"
                jar cf "${COMPRESS_FILE}" ${FILES}
                ;;
            *.iso)
                printf "%s " "[+] 7z a ${COMPRESS_FILE} ${FILES_FORMAT}"
                printf "\\n"
                7z a "${COMPRESS_FILE}" ${FILES}
                ;;
            *)
                printf "%s\\n" "'${COMPRESS_FILE}' is not a valid compressed file" >&2
                ;;
        esac
    fi
    IFS="${OLDIFS}"
}

if [ ! -t 0 ]; then
    #there is input comming from pipe or file, add to the end of $@
    set -- $(for arg in "${@}"; do printf "%s\\n" "${arg}"; done) $(cat)
fi

[ "${#}" -lt "2" ] && _usage

while getopts ":s:" option; do
    case "${option}" in
        s) SFLAG="yes"
           shift 1; _compress "${@}"
           exit 0 ;;
        :) printf "%s\\n" "Option -${OPTARG} requires an argument" >&2
           _usage ;;
        \?) printf "%s\\n" "Invalid option: -${OPTARG}" >&2
           _usage ;;
    esac
done

_compress "${@}"

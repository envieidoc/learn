#!/bin/sh
#description: control music apps, currently mpd && mplayerd
#usage: music-control [play|pause|toggle|next|previous]

#example: music-control next
#play next song in queue

_usage()
{
    printf "%s\\n" "usage: $(expr "${0}" : '.*/\([^/]*\)') play|pause|toggle|next|previous" >&2
    exit 1
}

_die()
{
    [ -z "${1}" ] && return 1
    printf "%b\\n" "$(expr "${0}" : '.*/\([^/]*\)'): ${*}" >&2
    exit 1
}

_mplayer()
{
    [ -z "${1}" ] && return 1
    [ ! -p /tmp/mplayer.fifo ] && return 1
    case "${1}" in
        play|pause|toggle) printf "%s\\n" "pause"      > /tmp/mplayer.fifo ;;
        next)              printf "%s\\n" "pt_step 1"  > /tmp/mplayer.fifo ;;
        previous)          printf "%s\\n" "pt_step -1" > /tmp/mplayer.fifo ;;
    esac
}

_mpd()
{
    [ -z "${1}" ] && return 1
    case "${1}" in
        play)     mpc play >/dev/null ;;
        pause)    [ "$(mpc status | grep playing)" ] && mpc pause 1>/dev/null ;;
        toggle)   [ "$(mpc status | grep playing)" ] && mpc pause 1>/dev/null || mpc play 1>/dev/null ;;
        next)     mpc next > /dev/null ;;
        previous) mpc prev > /dev/null ;;
    esac
}

_music_control()
{
    [ -z "${1}" ] && return 1
    case "${1}" in
        pl*) _music_control_var_param="play" ;;
        pa*) _music_control_var_param="pause" ;;
        t*)  _music_control_var_param="toggle" ;;
        n*)  _music_control_var_param="next" ;;
        pr*) _music_control_var_param="previous" ;;
    esac
    if [ -n "$(pgrep mplayer)" ] && [ -n "$(pgrep mpd)" ]; then
        _mpd pause
    fi
    if [ -n "$(pgrep mplayer)" ]; then
        _mplayer "${_music_control_var_param}"
    elif [ -n "$(pgrep mpd)" ]; then
        _mpd "${_music_control_var_param}"
    fi
}

if [ ! -t 0 ]; then
    #there is input comming from pipe or file, add to the end of $@
    set -- $(for arg in "${@}"; do printf "%s\\n" "${arg}"; done) $(cat)
fi

[ X"${#}" != X"1" ] && _usage

case "${1}" in
    pl*|pa*|pr*|n*|t*) ;;
    *) _usage ;;
esac

_music_control "${1}"

#!/bin/sh
#description: control several music apps, currently mpd && mplayerd
#usage: music-control [pause|next|previous]

#example: music-control next
#no-output

_usage()
{
    printf "%s\\n" "usage: $(expr "${0}" : '.*/\([^/]*\)') pause|next|previous" >&2
    exit 1
}

if [ ! -t 0 ]; then
    #there is input comming from pipe or file, add to the end of $@
    set -- $(for arg in "${@}"; do printf "%s\\n" "${arg}"; done) $(cat)
fi

if [ "${#}" -eq "0" ] || [ "${#}" -gt "1" ]; then
    _usage
fi

case "${1}" in
    pause|next|previous) ;;
    *) _usage ;;
esac

players="$(command ps axo command= | sed \
    -e "s/ .*//; s:.*/::; s/:$//;"       \
    -e "s/^[[(-]//; s/[])]$//"           \
    -e "s/^<defunct>$//" | grep "mplayer\|mpd")"

for player in ${players}; do
    case "${player}" in
        mplayer) mplayer_flag="1";;
        mpd)     mpd_flag="1";;
    esac
done

if [ -n "${mplayer_flag}" ] && [ -n "${mpd_flag}" ]; then
    if command -v "mpc" >/dev/null 2>&1; then
        if [ "$(mpc status | grep playing)" ]; then
            mpc pause 1>/dev/null
        fi
    fi
fi

if [ -n "${mplayer_flag}" ]; then
    if [ -p /tmp/mplayer.fifo ]; then
        case "${1}" in
            pause)    printf "%s\\n" "pause"      > /tmp/mplayer.fifo ;;
            next)     printf "%s\\n" "pt_step 1"  > /tmp/mplayer.fifo ;;
            previous) printf "%s\\n" "pt_step -1" > /tmp/mplayer.fifo ;;
        esac
    fi
elif [ -n "${mpd_flag}" ]; then
    if command -v "mpc" > /dev/null 2>&1; then
        case "${1}" in
            pause)
                if [ "$(mpc status | grep playing)" ]; then
                    mpc pause 1>/dev/null
                else
                    mpc play 1>/dev/null
                fi
                ;;
            next)     mpc next ;;
            previous) mpc prev ;;
        esac
    fi
fi

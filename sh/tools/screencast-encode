#!/usr/bin/env bash
#encode screencasts

_basename()
{
    [ -z "$1" ] && return 0
    expr "$1" : '.*/\([^/]*\)'
}

_usage()
{
    echo "Usage: $(_basename $0) [-v 0-2048][-s soundtrack.mp3][-k] screencast.mkv" >&2
    echo >&2
    echo "          -v     Change the volume from the screencast [0-2048] (ffmpeg -vol)" >&2
    echo "          -s     Add soundtrack" >&2
    echo "          -k     Keep tmp files" >&2
    exit 1
}

#similar
[ -z "$1" ] && _usage
#[ -n "$1" ] || _usage

_notify()
{
    if [ "$TERM" = linux ]; then
        notify-send -t 3000 "${@}"
    else
        echo "${@}"
        echo
    fi
}

cleanup ()
{
    if [ ! -z "$VFLAG" ]; then
        rm "$basename".audio*
    fi
    if [ ! -z "$SFLAG" ]; then
        rm "$(_basename $SOUNDTRACK)".vol*
    fi
}

while getopts ":v:s:k" option; do
    case $option in
        v)
          VFLAG=yes
          VOLUME=$OPTARG
          ;;
        s)
          SFLAG=yes
          SOUNDTRACK=$OPTARG
          ;;
        k)
          KFLAG=yes
          ;;
        :)
          echo "Option -$OPTARG requires an argument"
          _usage
          ;;
        \?)
          echo "Invalid option: -$OPTARG"
          _usage
          ;;
    esac
done

if [ "$#" = 0 ]; then
    if [[ $1 == *.mkv ]]; then
        file=$1
        basename=$(_basename $file .mkv)
    fi
fi

while [ "$#" -ne 0 ]; do
    if [[ $1 == *.mkv ]]; then
        file=$1
        basename=$(_basename $file .mkv)
    fi
    shift
done

if [ -z "$file" ]; then
    _notify "[-] Error:" "Specify a .mkv file"
    exit 1
elif [ ! -e "$file" ]; then
    _notify "[-] Error:" "File doesn't exist"
    exit 1
fi

if [ ! -z "$VFLAG" ] && [ ! -z "$SFLAG" ]; then
    #with -vol and -soundtrack options
    if [[ $VOLUME == -* ]]; then
        _notify "[-] Error:" "Option -v requires an argument"
        _usage
        exit 1
    fi
    if [ ! -e "$SOUNDTRACK" ]; then
        _notify "[-] Error:" "soundtrack file $SOUNDTRACK doesn't exist"
        exit 1
    fi

    _notify "[+]" "ffmpeg -i $file -acodec libvorbis -ab 192k -vn -y -ac 2 -vol $VOLUME $basename.audio[volume_$VOLUME].ogg"
    _notify "[-]" "Be patient this may take a while..."
    ffmpeg -i "$file" -acodec libvorbis -ab 192k -vn -y -ac 2 -vol $VOLUME "$basename".audio[volume_$VOLUME].ogg
    if [ "$?" = 1 ]; then
        _notify "[-]" "Failed"
        exit 1
    fi

    #TODO 28-11-2010 20:15 => make soundtrack vol an option
    _notify "[+]" "ffmpeg -i "$SOUNDTRACK" -vol 15 -acodec libvorbis -ab 192k $(_basename "$SOUNDTRACK").vol[15].ogg"
    ffmpeg -i "$SOUNDTRACK" -vol 15 -acodec libvorbis -ab 192k "$(_basename "$SOUNDTRACK")".vol[15].ogg
    if [ "$?" = 1 ]; then
        _notify "[-]" "Failed"
        exit 1
    fi

    _notify "[+]" "sox -S -m $basename.audio[volume_$VOLUME].ogg $(_basename "$SOUNDTRACK").vol[15].ogg -r192k $basename.audio_mixed.ogg"
    sox -S -m "$basename".audio[volume_$VOLUME].ogg "$(_basename "$SOUNDTRACK")".vol[15].ogg -r192k "$basename".audio_mixed.ogg
    if [ "$?" = 1 ]; then
        _notify "[-]" "Failed"
        exit 1
    fi

    _notify "[+]" "mkvmerge -o $basename.optimized[$VOLUME].mkv -A $file $basename.audio_mixed.ogg"
    mkvmerge -o "$basename".optimized.mkv -A $file "$basename".audio_mixed.ogg
    if [ "$?" = 1 ]; then
        _notify "[-]" "Failed"
        exit 1
    fi

elif [ ! -z "$SFLAG" ]; then
    #with -soundtrack option
    if [ ! -e "$SOUNDTRACK" ]; then
        _notify "[-] Error:" "soundtrack file doesn't exist"
        exit 1
    fi
    _notify "[+]" "ffmpeg -i $file -acodec libvorbis -ab 192k -vn -y -ac 2 $basename.audio.ogg"
    _notify "[-]" "Be patient this may take a while..."
    ffmpeg -i "$file" -acodec libvorbis -ab 192k -vn -y -ac 2 "$basename".audio.ogg
    if [ "$?" = 1 ]; then
        _notify "[-]" "Failed"
        exit 1
    fi

    #TODO 28-11-2010 20:15 => make soundtrack vol an option
    _notify "[+]" "ffmpeg -i "$SOUNDTRACK" -vol 15 -acodec libvorbis -ab 192k $(_basename "$SOUNDTRACK").vol[15].ogg"
    ffmpeg -i "$SOUNDTRACK" -vol 15 -acodec libvorbis -ab 192k "$(_basename "$SOUNDTRACK")".vol[15].ogg
    if [ "$?" = 1 ]; then
        _notify "[-]" "Failed"
        exit 1
    fi

    _notify "[+]" "sox -S -m $basename.audio.ogg $(_basename "$SOUNDTRACK").vol[15].ogg -r192k $basename.audio_mixed.ogg"
    sox -S -m "$basename".audio.ogg "$(_basename "$SOUNDTRACK")".vol[15].ogg -r192k "$basename".audio_mixed.ogg
    if [ "$?" = 1 ]; then
        _notify "[-]" "Failed"
        exit 1
    fi

    _notify "[+]" "mkvmerge -o $basename.optimized[$VOLUME].mkv -A $file $basename.audio_mixed.ogg"
    mkvmerge -o "$basename".optimized.mkv -A $file "$basename".audio_mixed.ogg
    if [ "$?" = 1 ]; then
        _notify "[-]" "Failed"
        exit 1
    fi

elif [ ! -z "$VFLAG" ]; then
    #with -vol option
    if [[ $VOLUME == -* ]]; then
        _notify "[-] Error:" "Option -v requires an argument"
        _usage
        exit 1
    fi
    _notify "[+]" "ffmpeg -i $file -acodec libvorbis -ab 192k -vn -y -ac 2 -vol $VOLUME $basename.audio[volume_$VOLUME].ogg"
    _notify "[-]" "Be patient this may take a while..."
    ffmpeg -i "$file" -acodec libvorbis -ab 192k -vn -y -ac 2 -vol $VOLUME "$basename".audio[volume_$VOLUME].ogg
    if [ "$?" = 1 ]; then
        _notify "[-]" "Failed"
        exit 1
    fi

    _notify "[+]" "mkvmerge -o $basename.optimized[$VOLUME].mkv -A $file $basename.audio[volume_$VOLUME].ogg"
    mkvmerge -o "$basename".optimized[$VOLUME].mkv -A $file "$basename".audio[volume_$VOLUME].ogg
    if [ "$?" = 1 ]; then
        _notify "[-]" "Failed"
        exit 1
    fi
else
    #only encode
    _notify "[+]" "ffmpeg -i $file -acodec libvorbis -ab 192k -ac 2 -vcodec libx264 -vpre max -crf 22 -threads 0 $basename.optimized.mkv"
    ffmpeg -i "$file" -acodec libvorbis -ab 192k -ac 2 -vcodec libx264 -vpre max -crf 22 -threads 0 "$basename".optimized.mkv
    if [ "$?" = 1 ]; then
        _notify "[-]" "Failed"
        exit 1
    fi
fi

if [ -z "$KFLAG" ]; then
    cleanup
fi

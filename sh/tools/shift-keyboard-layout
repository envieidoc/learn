#!/bin/sh
#description: control keyboard layouts, best suited for tiling window managers
#usage: shift-keyboard-layout
# change keyboard layout to the next configured one

default_layouts="latam,us,ru" #see /usr/share/X11/xkb/rules/base.lst

_str2lower()
{
    [ -z "${1}" ] && return 1
    printf "%s\\n" "${@}" | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'
}

_get_minos_config()
{
    [ -z "${1}" ] && return 1
    [ -z "${_get_minos_config_var_home}" ] && _get_minos_config_var_home=$(awk '!/^#|^$/' "${HOME}"/.minos/config 2>&1)
    [ -z "${_get_minos_config_var_etc}" ]  && _get_minos_config_var_etc=$(awk '!/^#|^$/'  /etc/minos/config 2>&1)

    _get_minos_config_var_option="$(printf "%s" "${_get_minos_config_var_home}"|awk -v pattern="^${1}=" -F"=" '$0 ~ pattern {print $2; exit}' 2>&1)"
    [ -z "${_get_minos_config_var_option}" ] && _get_minos_config_var_option="$(printf "%s" "${_get_minos_config_var_etc}"|awk -v pattern="^${1}=" -F"=" '$0 ~ pattern {print $2; exit}' 2>&1)"
    [ -z "${_get_minos_config_var_option}" ] && printf "%s" "" || { eval _get_minos_config_var_option="${_get_minos_config_var_option}"; printf "%s" "${_get_minos_config_var_option}"; }
}

_notify()
{
    [ -z "${1}" ] && return 1
    if [ X"${TERM}" = X"linux" ] || [ -z "${TERM}" ]; then
        kill -9 $(pgrep notify-osd) >/dev/null 2>&1
        if ! DISPLAY=:0 notify-send -t 1000 "${1}"  "${2}"; then
            if command -v "gxmessage" 2>/dev/null; then
                font="Monaco 9"
                gxmessage "${font:+-fn "$font"}" "${1} ${2}" "ok"
            else
                font="fixed"
                xmessage "${font:+-fn "$font"}" "${1} ${2}" "ok"
            fi
        fi
    else
        if [ -z "${2}" ]; then
            printf "%s\\n" "${1}" "${2}"
        else
            printf "%s: %s\\n" "${1}" "${2}"
        fi
    fi
}

_return_valid_layouts()
{
    [ -z "${1}" ] && { printf "%s" "${default_layouts}"; return; } || _return_valid_layouts_var_arg="${1}"
    _return_valid_layouts_var_reference=$(awk '/! layout/,/! variant/ {if ($0 !~ "^$" && $1 !~ "!") print $1}' /usr/share/X11/xkb/rules/base.lst 2>&1)
    _return_valid_layouts_var_arg="$(_str2lower "${_return_valid_layouts_var_arg}")"
    _return_valid_layouts_var_arg="$(printf "%s" "${_return_valid_layouts_var_arg}" | sed 's: :,:g')"
    _return_valid_layouts_var_cp="${_return_valid_layouts_var_arg}"

    while [ "${_return_valid_layouts_var_arg}" ]; do
        _return_valid_layouts_var_option="${_return_valid_layouts_var_arg%%,*}"
        if [ -z "$(printf "%s" "${_return_valid_layouts_var_reference}" | grep "${_return_valid_layouts_var_option}")" ]; then
             printf "%s" "${default_layouts}"; return;
        fi
        [ X"${_return_valid_layouts_var_arg}" = X"${_return_valid_layouts_var_option}" ] \
            && _return_valid_layouts_var_arg="" \
            || _return_valid_layouts_var_arg="${_return_valid_layouts_var_arg#*,}"
    done
     printf "%s" "${_return_valid_layouts_var_cp}"; return;
}

if ! command -v "setxkbmap" >/dev/null; then
    _notify "[-] Error" "you need to install setxkbmap to run this program"
fi

current_layout="$(setxkbmap -query | awk '/layout/ {print $2}')"
layouts="$(_get_minos_config keyboard-layouts)"
[ -z "${layouts}" ] && layouts="${default_layouts}" || layouts="$(_return_valid_layouts "${layouts}")"
d_layouts="${layouts}"
c_layouts="${layouts}"
c="0";d="0"

while [ "${d_layouts}" ]; do #items in array
    option="${d_layouts%%,*}"
    d="$((${d} + 1))"
    [ X"${d_layouts}" = X"${option}" ] && d_layouts="" || d_layouts="${d_layouts#*,}"
done

while [ "${c_layouts}" ]; do #what position is current_layout respect to array
    option="${c_layouts%%,*}"
    c="$((${c} + 1))"
    [ X"${current_layout}" = X"${option}" ] && break
    [ X"${c_layouts}" = X"${option}" ] && c_layouts="" || c_layouts="${c_layouts#*,}"
done

[ -z "${c_layouts}" ] && exit #invalid layout format

e="$((${c} + 1))"
[ "${d}" -eq "${c}" ] && e="1" #return to first element if we're in the last one

c="0"; while [ "${layouts}" ]; do #set next keyboard layout
    option="${layouts%%,*}"
    c="$((${c} + 1))"
    if [ "${c}" -eq "${e}" ]; then
        setxkbmap "${option}"
        _notify "[+] Keyboard layout: $(printf "%s\\n" "${option}" | \
            tr 'abcdefghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')"
    fi
    [ X"${layouts}" = X"${option}" ] && layouts="" || layouts="${layouts#*,}"
done

#!/bin/sh
#simple script to update firefox nightly when the integrated updater doesn't work

trap _cleanup 0 15 #trap ctrl-c
#trap _cleanup SIGINT SIGTERM #trap ctrl-c

_cmd()
{   #print current command, exits on fail
    [ -z "${1}" ] && return 0

    printf "%s " "    $ ${@}"
    printf "\\n"
    eval "${@}"

    status="${?}"
    [ X"${status}" != X"0" ] && exit "${status}" || return
}

_die()
{
    [ -z "${1}" ] && return 1
    printf "%b\\n" "$(expr "${0}" : '.*/\([^/]*\)'): ${*}" >&2
    exit 1
}

_cleanup()
{   #clean tmp files, exits with no parameters
    stty echo
    printf "\\n"
    printf "%s\\n" "[+] cleanup ..."
    _cmd rm /tmp/firefox*bz2

    [ -z ${1} ] && exit
}

_notify()
{
    [ -z "${1}" ] && return 1
    [ -z "${2}" ] && return 1
    if [ X"${TERM}" = X"linux" ] || [ -z "${TERM}" ]; then
        kill -9 $(pgrep notify-osd) >/dev/null 2>&1
        if ! DISPLAY=:0 notify-send -t 1000 "${1}"  "${2}"; then
            if command -v "gxmessage" 2>/dev/null; then
                font="Monaco 9"
                gxmessage "${font:+-fn "$font"}" "${1} ${2}" "got it"
            else
                font="fixed"
                xmessage "${font:+-fn "$font"}" "${1} ${2}" "got it"
            fi
        fi
    else
        printf "%s: %s\\n" "${1}" "${2}"
    fi
}

_arch()
{   #check for system arch, returns [64|32]
    if [ -z "${MACHTYPE}" ]; then
        _arch_var_arch="$(uname -m)"
    else
        _arch_var_arch="$(printf "%s" "${MACHTYPE}" | cut -d- -f1)"
    fi

    case "${_arch_var_arch}" in
        x86_64) _arch_var_arch="64" ;;
        i686)   _arch_var_arch="32" ;;
        *)      return 1 ;;
    esac

    printf "%s" "${_arch_var_arch}"
}

_update_firefox()
{
    _update_firefox_var_arch="$(_arch)"
    [ -d "${HOME}/.bin/firefox${_update_firefox_var_arch}" ] && _cmd mkdir -p "${HOME}/.bin/firefox${_update_firefox_var_arch}"
    case "${_update_firefox_var_arch}" in
        32) nightly="$(curl http://ftp.mozilla.org/pub/mozilla.org/firefox/nightly/latest-trunk/ 2>&1 \
                | grep -o -E 'href="([^"#]+)"' | cut -d'"' -f2 | grep "linux-i686.tar.bz2")" ;;
        64) nightly="$(curl http://ftp.mozilla.org/pub/mozilla.org/firefox/nightly/latest-trunk/ 2>&1 \
                | grep -o -E 'href="([^"#]+)"' | cut -d'"' -f2 | grep "linux-x86_64.tar.bz2")" ;;
    esac
    _cmd wget -c http://ftp.mozilla.org/pub/mozilla.org/firefox/nightly/latest-trunk/"${nightly}" -O /tmp/firefox.tar.bz2
    _cmd "bzcat < /tmp/firefox.tar.bz2 | tar xf -C /tmp -"
    _cmd rm -rf /tmp/firefox-* "${HOME}/.bin/firefox.old"
    _cmd mv "${HOME}/.bin/firefox${_update_firefox_var_arch}" "${HOME}/.bin/firefox.old"
    _cmd mv /tmp/firefox "${HOME}/.bin/firefox${_update_firefox_var_arch}"
    _notify "[+]  Done" "restart firefox to apply the update"
}

if ! command -v "curl" >/dev/null 2>&1; then
    _die "curl was not found!"
fi

_update_firefox

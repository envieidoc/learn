#!/bin/sh
#description: setup custom tasks
#usage: setup [autocp|script]

#example: setup script /path/file
#[+] chmod +x dmenu-killall
#[+] sudo cp dmenu-killall /usr/local/bin

#Don't forget to update this when adding new functions
_usage()
{
  printf "%s\\n" "$(expr "${0}" : '.*/\([^/]*\)'): setup my common tasks" >&2
  printf "\\n" >&2
  printf "%s\\n" "  autocp            cp custom autocomplete file" >&2
  printf "%s\\n" "  script            cp custom script to the path system" >&2
  printf "\\n"
  exit 1
}

_exec()
{   #print current command, exits on fail
    [ -z "${1}" ] && return 0

    printf "%s " "[+] ${@}"
    printf "\\n"
    eval "${@}"

    _exec_var_status="${?}"
    [ X"${_exec_var_status}" != X"0" ] && exit "${_exec_var_status}" || return
}

_script()
{

    [ -z "${1}" ] && (printf "%s\\n" "$(expr "${0}" : '.*/\([^/]*\)'): Missing argument, looking for a .sh|.py|.rb|etc script"; exit 1)

    for file; do
        _exec chmod +x "${file}"
        _exec sudo cp -- "${file}" /usr/local/bin
    done
}

_autocp()
{
    [ -n "${1}" ] || (printf "%s\\n" "$(expr "${0}" : '.*/\([^/]*\)'): Missing parameter, looking for an .autocp file"; exit 1)

    for file; do
        if [ -d /usr/share/bash-completion/completions/ ]; then
            _exec sudo cp -- "${file}" /usr/share/bash-completion/completions/
        elif [ -d /etc/bash_completion.d/ ]; then
            _exec sudo cp -- "${file}" /etc/bash_completion.d/
        fi
    done
}

if [ ! -t 0 ]; then
    #there is input comming from pipe or file, add to the end of $@
    set -- $(for arg in "${@}"; do printf "%s\\n" "${arg}"; done) $(cat)
fi

if [ X"${#}" != X"0" ]; then
    case "${1}" in
        script)    shift; _script "${@}" ;;
        autocp)    shift; _autocp "${@}" ;;
        -h|--help) _usage ;;
        *)         printf "%s\\n" "Error, unknown option: ${1}" >&2; _usage ;;
    esac
else
    _usage
fi

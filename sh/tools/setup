#!/usr/bin/env sh
#description: setup custom tasks
#usage: setup [autocp|script]

#example: setup script /path/file
#[+] chmod +x dmenu-killall 
#[+] sudo cp dmenu-killall /usr/local/bin

#Don't forget update this when adding new functions
_usage()
{
  printf "%s\\n" "$(expr "$0" : '.*/\([^/]*\)'): setup my common tasks"
  printf "\\n"
  printf "%s\\n" "  autocp            cp custom autocomplete file"
  printf "%s\\n" "  script            cp custom script to the path system"
  printf "\\n"
  exit 0
}

_exec()
{   #print current command, exits on fail
    [ -z "$1" ] && return 0

    printf "%s " "[+] $@"
    printf "\\n"
    eval "$@"

    local status=$?
    [ X"$status" != X"0" ] && exit $status || return
}

_script()
{

    [ -z "$1" ] && (printf "%s\\n" "$(expr "$0" : '.*/\([^/]*\)'): Missing argument, looking for a .sh|.py|.rb|etc script"; exit 1)

    for file
    do
        _exec chmod +x "$file"
        _exec sudo cp "$file" /usr/local/bin
    done

    exit 0
}

_autocp()
{
    [ -n "$1" ] || (printf "%s\\n" "$(expr "$0" : '.*/\([^/]*\)'): Missing parameter, looking for an .autocp file"; exit 1)

    for file
    do
        _exec sudo cp "$file" /etc/bash_completion.d/
    done
    exit 0
}

if [ X"$#" != X"0" ]; then
    case $1 in
        script)
        shift; _script $@
        ;;
        autocp)
        shift; _autocp $@
        ;;
        -h | --help)
        _usage
        ;;
        -v | --version)
        printf "%s\\n" "$VERSION"
        ;;
        *)
        printf "%s\\n" "Error, unknown option: $1"
        _usage
        ;;
    esac
else
    _usage
fi

#!/bin/sh
#description: backup mozilla configurations
#usage: backup-mozilla [-n NUMBER] [dir]

#example: backup-mozilla
#tar: Removing leading `/' from member names
#/home/chilicuil/.mozilla/
#/home/chilicuil/.mozilla/firefox/
#...

_usage()
{
    printf "%s\\n" "Usage: $(expr "${0}" : '.*/\([^/]*\)') [-n NUMBER] [DIR]" >&2
    printf "%s\\n" "  -h   help (this text)" >&2
    printf "%s\\n" "  -n   number of copies to save" >&2
    printf "%s\\n" "  -c   continue with backup even if firefox isn't running" >&2
    printf "\\n"
    printf "%s\\n" "  dir  directory to save backups (~/.mozilla-backups by default)" >&2
    exit 1
}

_num()
{   #look for a number, returns 0 on success, 1 otherwise
    [ -z "${1}" ] && return 1
    printf "%s\\n" "${@}" | grep -v "[^0-9]" >/dev/null
}

_bmozilla()
{
    [ -z "${1}" ] && return 1
    mkdir -p "${1}" >/dev/null 2>&1
    if [ -d "${HOME}"/.mozilla ]; then
        if command -v "lrzip" 2>/dev/null; then
            tar cf - "${HOME}"/.mozilla | lrzip -q -L 9 > "${1}"/mozilla-"$(date +%Y-%m-%d:%H:%M)".tar.lrz
        elif command -v "bzip2" 2>/dev/null; then
            tar cf - "${HOME}"/.mozilla | bzip2 > "${1}"/mozilla-"$(date +%Y-%m-%d:%H:%M)".tar.bz2
        else
            tar cf - "${HOME}"/.mozilla | gzip > "${1}"/mozilla-"$(date +%Y-%m-%d:%H:%M)".tar.gz
        fi
    else
        return 1
    fi
}

_blimiter()
{
    [ -z "${1}" ] && return 1
    [ -z "${2}" ] && return 1

    _blimiter_var_backups="$(find "${1}" -maxdepth 1 -type f|wc -l)"

    if [ "${_blimiter_var_backups}" -gt "${2}" ]; then
        rm -rf $(find "${1}" -type f -printf '%T+ %p\n' | sort | head -1 | awk '{print $2}')
    fi
}

if [ ! -t 0 ]; then
    #there is input comming from pipe or file, add to the end of $@
    set -- $(for arg in "${@}"; do printf "%s\\n" "${arg}"; done) $(cat)
fi

for arg; do #parse options
    case "${arg}" in
        -h) _usage ;;
        -c) static="true" ;;
        -n) if [ "${#}" -gt "1" ]; then
                blimit="$(printf "%s " "${@}" | awk '{print $2}')"
                shift 2
                if ! _num "${blimit}"; then
                    printf "%s\\n" "Input must be a number: ${blimit}" >&2; _usage
                fi
            else
                _die "Option ${arg} requires a parameter"
            fi ;;
        -*) printf "%s\\n" "Unrecognized option: ${arg}" >&2; _usage ;;
    esac
done

if [ -z "${static}" ]; then
    if ! pgrep firefox >/dev/null 2>&1; then
        return 1
    fi
fi

[ -z "${1}" ] && dir="${HOME}"/.mozilla-backups || dir="${1}"
[ -z "${blimit}" ] && blimit="5"

_bmozilla "${dir}"
_blimiter "${dir}" "${blimit}"

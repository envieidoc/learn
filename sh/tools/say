#!/usr/bin/env sh
#description: say phrase
#usage: say [OPTION] phrase

#example: say -en "hello world"
#no-output, only audio

[ -f /usr/bin/mplayer ] || { printf "%b\\n" "$(expr "$0" : '.*/\([^/]*\)'): You need mplayer to run this script\n$ sudo apt-get install mplayer"; exit 1; }

_usage()
{
    printf "%s\\n" "Usage: `expr "$0" : '.*/\([^/]*\)'` [-sl] phrase"
    printf "\\n"
    printf "%s\\n" "       sl     source language (auto by default)"
    exit 1
}

_say()
{
    [ -z "$1" ] && return 1
    phrase="$*"

    while [ ${#phrase} -gt 99 ]; do
        tmp=$(printf "%b" "${phrase}" | cut -c1-99 | xxd -plain | tr -d '\n' | sed 's/\(..\)/%\1/g')
        mplayer -really-quiet "http://translate.google.com/translate_tts?ie=UTF-8&tl=$sl&q=$tmp" > /dev/null 2>&1
        phrase=$(printf "%b" "${phrase}" | cut -c99-$(expr ${#phrase} + 1))
        #http://stackoverflow.com/questions/4988155/is-there-a-bash-command-that-can-tell-the-size-of-a-shell-variable
    done

    #http://stackoverflow.com/questions/296536/urlencode-from-a-bash-script
    phrase=$(printf "%b" "$phrase" | xxd -plain | tr -d '\n' | sed 's/\(..\)/%\1/g')
    mplayer -really-quiet "http://translate.google.com/translate_tts?ie=UTF-8&tl=$sl&q=$phrase" > /dev/null 2>&1
}

if [ -t 0 ]; then
    #http://tldp.org/LDP/abs/html/fto.html
    if [ -z "$1" ]; then
        _usage
    fi
else
    #http://www.unix.com/302331138-post4.html
    read phrase < /dev/stdin
fi

case "$1" in
    -*)
        sl=$(printf "%s" "$1"  | cut -d'-' -f2)
        if [ -z "$sl" ]; then
            #maybe returning an error message is better
            sl="en";
        fi
        shift
        ;;
    *)  sl="en";
        ;;
esac

_say "$@"

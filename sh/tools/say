#!/usr/bin/env bash
#$ cat file_spanish | say
#$ cat file_english | say -e
#$ say -e "something"

[ -f /usr/bin/mplayer ] || { printf "%b\\n" "$(expr "$0" : '.*/\([^/]*\)'): You need vim & mplayer to run this script\n$ sudo apt-get install vim-nox mplayer"; exit 1; }
[ -f /usr/bin/vim ] || { printf "%b\\n" "$(expr "$0" : '.*/\([^/]*\)'): You need vim to run this script\n$ sudo apt-get install vim-nox"; exit 1; }

_usage()
{
    printf "%s\\n" "Usage: `expr "$0" : '.*/\([^/]*\)'` [-s|-p|-e] phrase"
    printf "\\n"
    printf "%s\\n" "          -s     Spanish (default)"
    printf "%s\\n" "          -p     Portuguese"
    printf "%s\\n" "          -e     English"
    exit 1
}

if [ -t 0 ]; then
    #http://tldp.org/LDP/abs/html/fto.html
    if [ -z "$1" ]; then
        _usage
    fi
else
    #http://www.unix.com/302331138-post4.html
    read PHRASE < /dev/stdin
fi

while getopts ":spe" option; do
    case $option in
        s)
          lang="es";
          shift
          [ -z "$PHRASE" ] && PHRASE="$@"
          ;;
        p)
          lang="pt";
          shift
          [ -z "$PHRASE" ] && PHRASE="$@"
          ;;
        e)
          lang="en";
          shift
          [ -z "$PHRASE" ] && PHRASE="$@"
          ;;
        :)
          if [ -z "$PHRASE" ]; then
              printf "%s\\n" "Option -$OPTARG requires an argument"
              _usage
          fi
          ;;
        \?)
          printf "%s\\n" "Invalid option: -$OPTARG"
          _usage
          ;;
    esac
done

if [ -z "$lang" ]; then
    lang="es";
    if [ -z "$PHRASE" ]; then
        PHRASE="$@"
    fi
fi

while [ ${#PHRASE} -gt 100 ]; do
    tmp=$(printf "%b" "${PHRASE:0:100}" | xxd -plain | tr -d '\n' | sed 's/\(..\)/%\1/g')
    mplayer -really-quiet "http://translate.google.com/translate_tts?ie=UTF-8&tl=$lang&q=$tmp" > /dev/null 2>&1
    PHRASE=${PHRASE:100:${#PHRASE}}
    #http://stackoverflow.com/questions/4988155/is-there-a-bash-command-that-can-tell-the-size-of-a-shell-variable
done

#http://stackoverflow.com/questions/296536/urlencode-from-a-bash-script
PHRASE=$(printf "%b" "$PHRASE" | xxd -plain | tr -d '\n' | sed 's/\(..\)/%\1/g')
shift;shift;
mplayer -really-quiet "http://translate.google.com/translate_tts?ie=UTF-8&tl=$lang&q=$PHRASE" > /dev/null 2>&1

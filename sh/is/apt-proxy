#!/usr/bin/env bash

updates="https://raw.github.com/chilicuil/learn/master/sh/is/apt-proxy"

_header()
{
    clear
    printf "%b\\n" "\033[1m-------------------------\033[7m Setup apt proxy \033[0m\033[1m----------------------------\033[0m"
    printf "%b\\n" "\033[1mUpdates:\033[0m $updates"
    printf "%b\\n" "\033[1m----------------------------------------------------------------------\033[0m"
}

_existaptproxy()
{
    avahi-browse -a  -t | grep apt-cacher-ng >/dev/null && return 0
    return 1
}

_handscui()
{   #waiting animation
    [ -z "$1" ] && { printf "%5s\n" ""; return 1; }
    pid="$1"
    animation_state=1

    if [ ! "$(ps -p $pid -o comm=)" ]; then
        printf "%5s\n" ""
        return
    fi

    printf "%s" "      "

    while [ "`ps -p $pid -o comm=`" ]; do
        printf "%b" "\b\b\b\b\b"
        case $animation_state in
            1)
                printf "%s" '\o@o\'
                animation_state=2
                ;;
            2)
                printf "%s" '|o@o|'
                animation_state=3
                ;;
            3)
                printf "%s" '/o@o/'
                animation_state=4
                ;;
            4)
                printf "%s" '|o@o|'
                animation_state=1
                ;;
        esac
        sleep 1
    done
    printf "%b" "\b\b\b\b\b" && printf "%5s\n" ""
}

_getroot()
{   #get sudo's password, define $sudopasswd and $sudocmd
    local tmp_path="/tmp"; local sudotest; local insudoers;

    if [ ! "$LOGNAME" = root ]; then
        printf "%s\\n" "Detecting user $LOGNAME (non-root) ..."
        printf "%s\\n" "Checking if sudo is available ..."
        sudotest=`type sudo &>/dev/null ; printf "%s\\n" "$?"`

        if [ "$sudotest" = 0 ]; then
            printf "%s\\n" "    Requesting sudo's password, I'll be carefull I promise =)"
            sudo -K
            if [ -e "$tmp_path/sudo.test" ]; then
                rm -f "$tmp_path/sudo.test"
            fi
            while [ -z "$sudopwd" ]; do
                printf "%s" "    - enter sudo-password: "
                stty -echo
                read sudopwd
                stty echo

                # password check
                printf "%s\\n" "$sudopwd" | sudo -S touch "$tmp_path/sudo.test" > "$tmp_path/sudo.output" 2>&1
                insudoers=$(grep -i "sudoers" "$tmp_path/sudo.output")
                if [ -n "$insudoers" ]; then
                    printf "%s\\n" "$sudopwd" | sudo -S rm "$tmp_path/sudo.output" > /dev/null 2>&1
                    exit
                fi

                if [ ! -e "$tmp_path/sudo.test" ]; then
                    sudopwd=""
                fi
            done

            sudocmd="/usr/bin/sudo -S"

            printf "%s\\n" "$sudopwd" | $sudocmd rm -f "$tmp_path/sudo.test" > /dev/null 2>&1
            printf "\\n"
        else
            printf "%s\\n" "You're not root and sudo isn't available. Please run this script as root!"
            exit
        fi
    fi
}

_waitforsudo()
{
    [ -z "$1" ] && return 1

    printf "%s" "    $ sudo $@ ..."
    printf "%s\\n" "$sudopwd" | $sudocmd $@ > /dev/null 2>&1 &
    sleep 1s

    if [ "$1" = DEBIAN_FRONTEND=noninteractive ]; then
        _handscui $(pidof $2)
    else
        _handscui $(pidof $1)
    fi
}

_header
_getroot

printf "%s\\n" "[+] setting up an apt-get proxy ..."
_waitforsudo apt-get update
_waitforsudo apt-get install --no-install-recommends -y avahi-utils

if _existaptproxy; then
    apt_proxy_server=$(avahi-browse -a -t -r -p | grep apt-cacher-ng | grep = | cut -d";" -f8)
    printf "%s\\n" "[+] exists an apt-get proxy in the network at $apt_proxy_server, using it ..."
    _waitforsudo apt-get install --no-install-recommends -y squid-deb-proxy-client
else
    printf "%s\\n" "[+] no apt-get proxy found, installing one locally ..."
    _waitforsudo apt-get install --no-install-recommends -y squid-deb-proxy-client apt-cacher-ng
    _waitforsudo wget http://javier.io/mirror/apt-cacher-ng.service -o /etc/avahi/services/apt-cacher-ng.service
    if [ -d "$home"/misc/ubuntu/proxy/apt-cacher-ng/ ]; then
        printf "%s\\n" "[+] exporting files ..."
        _cmdsudo rm -rf /var/cache/apt-cacher-ng
        _cmdsudo ln -s $home/misc/ubuntu/proxy/apt-cacher-ng/ /var/cache/apt-cacher-ng
    fi
fi

printf "%s\\n" "[+] done!, have fun!"
